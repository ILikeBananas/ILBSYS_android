
@startuml

class Server {
    + Address: String
    + Name: String

    + Server(name: String, address: String)
}

class InfluxDB {
    + currentServerAddress: String

    + setCurrentServerAddress(address: String): void
    + getRamUsage(): Double
    + getUptime(): int
    + getCPUUsage(): Double
    + doInfluxRequest(parameters; Map<String, String>): StringBuffer
    + getCPUOverTime(): UsageWithTime[]
    + getRAMOverTime(): UsageWithTime[]
}

class Utilities extends Application {
    + {static} SERVERS: String
    + {static} USER: String
    - {static} servers: ArrayList<Server>
    - {static} selectedServerIndex: int
    + {static} sharedPreferences: SharedPreferences

    + {static} getAllServer(): Server[]
    + {static} getAllServerAsString(): String[]
    + {static} addServer(server: Server): void
    + {static} getCurrentServerIndex(): int
    + {static} setCurrentServer(serverIndex: int): void
    + {static} getCurrentServer(): Server
    + {static} deleteServer(serverIndex: int): void
    + {static} editServer(serverIndex: int, server: Server)
    + {static} saveData(): void
    + {static} loadData(): void
}

class UsageWithTime {
    + TimeStamp: String
    + Usage: Double
}


Server --* Utilities

@enduml